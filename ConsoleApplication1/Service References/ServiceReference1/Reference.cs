//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleApplication1.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeneralSimulationConfiguration", Namespace="http://schemas.datacontract.org/2004/07/ServiceCommon")]
    [System.SerializableAttribute()]
    public partial class GeneralSimulationConfiguration : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxParallelTaskField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxParallelTask {
            get {
                return this.MaxParallelTaskField;
            }
            set {
                if ((this.MaxParallelTaskField.Equals(value) != true)) {
                    this.MaxParallelTaskField = value;
                    this.RaisePropertyChanged("MaxParallelTask");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SimulatorException", Namespace="http://schemas.datacontract.org/2004/07/ServiceCommon")]
    [System.SerializableAttribute()]
    public partial class SimulatorException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Exception InnerExceptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StackTraceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception InnerException {
            get {
                return this.InnerExceptionField;
            }
            set {
                if ((object.ReferenceEquals(this.InnerExceptionField, value) != true)) {
                    this.InnerExceptionField = value;
                    this.RaisePropertyChanged("InnerException");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StackTrace {
            get {
                return this.StackTraceField;
            }
            set {
                if ((object.ReferenceEquals(this.StackTraceField, value) != true)) {
                    this.StackTraceField = value;
                    this.RaisePropertyChanged("StackTrace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RunPlan", Namespace="http://schemas.datacontract.org/2004/07/Stimline.Data.RunDomain.Domain")]
    [System.SerializableAttribute()]
    public partial class RunPlan : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication1.ServiceReference1.AuditFields AuditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication1.ServiceReference1.DepthCorrection DepthCorrectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EstimatedDurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication1.ServiceReference1.InventoryRequirement[] InventoryRequirementsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> ProjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PublishedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication1.ServiceReference1.RunPlanAutoSpeed[] RunPlanAutoSpeedsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication1.ServiceReference1.RunPlanCategory[] RunPlanCategoriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication1.ServiceReference1.RunPlanDepthComment[] RunPlanDepthCommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication1.ServiceReference1.RunPlanToolstring RunPlanToolstringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication1.ServiceReference1.RunPlanWellGuideLimit[] RunPlanWellGuideLimitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RunTaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SharedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> WellboreIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication1.ServiceReference1.AuditFields Audit {
            get {
                return this.AuditField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditField, value) != true)) {
                    this.AuditField = value;
                    this.RaisePropertyChanged("Audit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication1.ServiceReference1.DepthCorrection DepthCorrection {
            get {
                return this.DepthCorrectionField;
            }
            set {
                if ((object.ReferenceEquals(this.DepthCorrectionField, value) != true)) {
                    this.DepthCorrectionField = value;
                    this.RaisePropertyChanged("DepthCorrection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EstimatedDuration {
            get {
                return this.EstimatedDurationField;
            }
            set {
                if ((this.EstimatedDurationField.Equals(value) != true)) {
                    this.EstimatedDurationField = value;
                    this.RaisePropertyChanged("EstimatedDuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication1.ServiceReference1.InventoryRequirement[] InventoryRequirements {
            get {
                return this.InventoryRequirementsField;
            }
            set {
                if ((object.ReferenceEquals(this.InventoryRequirementsField, value) != true)) {
                    this.InventoryRequirementsField = value;
                    this.RaisePropertyChanged("InventoryRequirements");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> ProjectId {
            get {
                return this.ProjectIdField;
            }
            set {
                if ((this.ProjectIdField.Equals(value) != true)) {
                    this.ProjectIdField = value;
                    this.RaisePropertyChanged("ProjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PublishedDate {
            get {
                return this.PublishedDateField;
            }
            set {
                if ((this.PublishedDateField.Equals(value) != true)) {
                    this.PublishedDateField = value;
                    this.RaisePropertyChanged("PublishedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication1.ServiceReference1.RunPlanAutoSpeed[] RunPlanAutoSpeeds {
            get {
                return this.RunPlanAutoSpeedsField;
            }
            set {
                if ((object.ReferenceEquals(this.RunPlanAutoSpeedsField, value) != true)) {
                    this.RunPlanAutoSpeedsField = value;
                    this.RaisePropertyChanged("RunPlanAutoSpeeds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication1.ServiceReference1.RunPlanCategory[] RunPlanCategories {
            get {
                return this.RunPlanCategoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.RunPlanCategoriesField, value) != true)) {
                    this.RunPlanCategoriesField = value;
                    this.RaisePropertyChanged("RunPlanCategories");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication1.ServiceReference1.RunPlanDepthComment[] RunPlanDepthComments {
            get {
                return this.RunPlanDepthCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.RunPlanDepthCommentsField, value) != true)) {
                    this.RunPlanDepthCommentsField = value;
                    this.RaisePropertyChanged("RunPlanDepthComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication1.ServiceReference1.RunPlanToolstring RunPlanToolstring {
            get {
                return this.RunPlanToolstringField;
            }
            set {
                if ((object.ReferenceEquals(this.RunPlanToolstringField, value) != true)) {
                    this.RunPlanToolstringField = value;
                    this.RaisePropertyChanged("RunPlanToolstring");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication1.ServiceReference1.RunPlanWellGuideLimit[] RunPlanWellGuideLimits {
            get {
                return this.RunPlanWellGuideLimitsField;
            }
            set {
                if ((object.ReferenceEquals(this.RunPlanWellGuideLimitsField, value) != true)) {
                    this.RunPlanWellGuideLimitsField = value;
                    this.RaisePropertyChanged("RunPlanWellGuideLimits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RunTask {
            get {
                return this.RunTaskField;
            }
            set {
                if ((object.ReferenceEquals(this.RunTaskField, value) != true)) {
                    this.RunTaskField = value;
                    this.RaisePropertyChanged("RunTask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SharedDate {
            get {
                return this.SharedDateField;
            }
            set {
                if ((this.SharedDateField.Equals(value) != true)) {
                    this.SharedDateField = value;
                    this.RaisePropertyChanged("SharedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UnitId {
            get {
                return this.UnitIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitIdField, value) != true)) {
                    this.UnitIdField = value;
                    this.RaisePropertyChanged("UnitId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> WellboreId {
            get {
                return this.WellboreIdField;
            }
            set {
                if ((this.WellboreIdField.Equals(value) != true)) {
                    this.WellboreIdField = value;
                    this.RaisePropertyChanged("WellboreId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuditFields", Namespace="http://schemas.datacontract.org/2004/07/Stimline.Data.Context")]
    [System.SerializableAttribute()]
    public partial class AuditFields : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeletedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DeletedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeletedBy {
            get {
                return this.DeletedByField;
            }
            set {
                if ((object.ReferenceEquals(this.DeletedByField, value) != true)) {
                    this.DeletedByField = value;
                    this.RaisePropertyChanged("DeletedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DeletedDate {
            get {
                return this.DeletedDateField;
            }
            set {
                if ((this.DeletedDateField.Equals(value) != true)) {
                    this.DeletedDateField = value;
                    this.RaisePropertyChanged("DeletedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DepthCorrection", Namespace="http://schemas.datacontract.org/2004/07/Stimline.Data.RunDomain.Domain")]
    [System.SerializableAttribute()]
    public partial class DepthCorrection : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> BottomWellTemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<ConsoleApplication1.ServiceReference1.CableHeadTensionEnum> CableHeadTensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> CableStretchCoefficientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> CableThermalExpansionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ElasticStretchCorrectionOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> FixedCableHeadTensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> MeasuredWellHeadPressureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> PceLineSupportCorrectionOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> TopWellTemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> WellTemperatureCorrectionOnField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> BottomWellTemperature {
            get {
                return this.BottomWellTemperatureField;
            }
            set {
                if ((this.BottomWellTemperatureField.Equals(value) != true)) {
                    this.BottomWellTemperatureField = value;
                    this.RaisePropertyChanged("BottomWellTemperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<ConsoleApplication1.ServiceReference1.CableHeadTensionEnum> CableHeadTension {
            get {
                return this.CableHeadTensionField;
            }
            set {
                if ((this.CableHeadTensionField.Equals(value) != true)) {
                    this.CableHeadTensionField = value;
                    this.RaisePropertyChanged("CableHeadTension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> CableStretchCoefficient {
            get {
                return this.CableStretchCoefficientField;
            }
            set {
                if ((this.CableStretchCoefficientField.Equals(value) != true)) {
                    this.CableStretchCoefficientField = value;
                    this.RaisePropertyChanged("CableStretchCoefficient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> CableThermalExpansion {
            get {
                return this.CableThermalExpansionField;
            }
            set {
                if ((this.CableThermalExpansionField.Equals(value) != true)) {
                    this.CableThermalExpansionField = value;
                    this.RaisePropertyChanged("CableThermalExpansion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ElasticStretchCorrectionOn {
            get {
                return this.ElasticStretchCorrectionOnField;
            }
            set {
                if ((this.ElasticStretchCorrectionOnField.Equals(value) != true)) {
                    this.ElasticStretchCorrectionOnField = value;
                    this.RaisePropertyChanged("ElasticStretchCorrectionOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> FixedCableHeadTension {
            get {
                return this.FixedCableHeadTensionField;
            }
            set {
                if ((this.FixedCableHeadTensionField.Equals(value) != true)) {
                    this.FixedCableHeadTensionField = value;
                    this.RaisePropertyChanged("FixedCableHeadTension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> MeasuredWellHeadPressure {
            get {
                return this.MeasuredWellHeadPressureField;
            }
            set {
                if ((this.MeasuredWellHeadPressureField.Equals(value) != true)) {
                    this.MeasuredWellHeadPressureField = value;
                    this.RaisePropertyChanged("MeasuredWellHeadPressure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> PceLineSupportCorrectionOn {
            get {
                return this.PceLineSupportCorrectionOnField;
            }
            set {
                if ((this.PceLineSupportCorrectionOnField.Equals(value) != true)) {
                    this.PceLineSupportCorrectionOnField = value;
                    this.RaisePropertyChanged("PceLineSupportCorrectionOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> TopWellTemperature {
            get {
                return this.TopWellTemperatureField;
            }
            set {
                if ((this.TopWellTemperatureField.Equals(value) != true)) {
                    this.TopWellTemperatureField = value;
                    this.RaisePropertyChanged("TopWellTemperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> WellTemperatureCorrectionOn {
            get {
                return this.WellTemperatureCorrectionOnField;
            }
            set {
                if ((this.WellTemperatureCorrectionOnField.Equals(value) != true)) {
                    this.WellTemperatureCorrectionOnField = value;
                    this.RaisePropertyChanged("WellTemperatureCorrectionOn");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RunPlanToolstring", Namespace="http://schemas.datacontract.org/2004/07/Stimline.Data.RunDomain.Domain")]
    [System.SerializableAttribute()]
    public partial class RunPlanToolstring : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> DistanceToCclField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<ConsoleApplication1.ServiceReference1.ToolstringLengthReferenceEnum> LengthReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication1.ServiceReference1.RunPlanToolstringElement[] RunPlanToolstringElementsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> ToolstringDisplacementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> ToolstringLengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> ToolstringWeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseSimpleToolstringField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> DistanceToCcl {
            get {
                return this.DistanceToCclField;
            }
            set {
                if ((this.DistanceToCclField.Equals(value) != true)) {
                    this.DistanceToCclField = value;
                    this.RaisePropertyChanged("DistanceToCcl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<ConsoleApplication1.ServiceReference1.ToolstringLengthReferenceEnum> LengthReference {
            get {
                return this.LengthReferenceField;
            }
            set {
                if ((this.LengthReferenceField.Equals(value) != true)) {
                    this.LengthReferenceField = value;
                    this.RaisePropertyChanged("LengthReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication1.ServiceReference1.RunPlanToolstringElement[] RunPlanToolstringElements {
            get {
                return this.RunPlanToolstringElementsField;
            }
            set {
                if ((object.ReferenceEquals(this.RunPlanToolstringElementsField, value) != true)) {
                    this.RunPlanToolstringElementsField = value;
                    this.RaisePropertyChanged("RunPlanToolstringElements");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> ToolstringDisplacement {
            get {
                return this.ToolstringDisplacementField;
            }
            set {
                if ((this.ToolstringDisplacementField.Equals(value) != true)) {
                    this.ToolstringDisplacementField = value;
                    this.RaisePropertyChanged("ToolstringDisplacement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> ToolstringLength {
            get {
                return this.ToolstringLengthField;
            }
            set {
                if ((this.ToolstringLengthField.Equals(value) != true)) {
                    this.ToolstringLengthField = value;
                    this.RaisePropertyChanged("ToolstringLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> ToolstringWeight {
            get {
                return this.ToolstringWeightField;
            }
            set {
                if ((this.ToolstringWeightField.Equals(value) != true)) {
                    this.ToolstringWeightField = value;
                    this.RaisePropertyChanged("ToolstringWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseSimpleToolstring {
            get {
                return this.UseSimpleToolstringField;
            }
            set {
                if ((this.UseSimpleToolstringField.Equals(value) != true)) {
                    this.UseSimpleToolstringField = value;
                    this.RaisePropertyChanged("UseSimpleToolstring");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InventoryRequirement", Namespace="http://schemas.datacontract.org/2004/07/Stimline.Data.RunDomain.Domain")]
    [System.SerializableAttribute()]
    public partial class InventoryRequirement : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication1.ServiceReference1.InventoryType InventoryTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PropertyDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PropertyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TargetValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication1.ServiceReference1.UnitOfMeasurementEnum UnitOfMeasurementField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication1.ServiceReference1.InventoryType InventoryType {
            get {
                return this.InventoryTypeField;
            }
            set {
                if ((this.InventoryTypeField.Equals(value) != true)) {
                    this.InventoryTypeField = value;
                    this.RaisePropertyChanged("InventoryType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PropertyDescription {
            get {
                return this.PropertyDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyDescriptionField, value) != true)) {
                    this.PropertyDescriptionField = value;
                    this.RaisePropertyChanged("PropertyDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PropertyName {
            get {
                return this.PropertyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyNameField, value) != true)) {
                    this.PropertyNameField = value;
                    this.RaisePropertyChanged("PropertyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TargetValue {
            get {
                return this.TargetValueField;
            }
            set {
                if ((object.ReferenceEquals(this.TargetValueField, value) != true)) {
                    this.TargetValueField = value;
                    this.RaisePropertyChanged("TargetValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication1.ServiceReference1.UnitOfMeasurementEnum UnitOfMeasurement {
            get {
                return this.UnitOfMeasurementField;
            }
            set {
                if ((this.UnitOfMeasurementField.Equals(value) != true)) {
                    this.UnitOfMeasurementField = value;
                    this.RaisePropertyChanged("UnitOfMeasurement");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RunPlanAutoSpeed", Namespace="http://schemas.datacontract.org/2004/07/Stimline.Data.RunDomain.Domain")]
    [System.SerializableAttribute()]
    public partial class RunPlanAutoSpeed : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ControlFunctionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DepthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication1.ServiceReference1.DirectionEnum DirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SpeedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ControlFunctionCode {
            get {
                return this.ControlFunctionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ControlFunctionCodeField, value) != true)) {
                    this.ControlFunctionCodeField = value;
                    this.RaisePropertyChanged("ControlFunctionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Depth {
            get {
                return this.DepthField;
            }
            set {
                if ((this.DepthField.Equals(value) != true)) {
                    this.DepthField = value;
                    this.RaisePropertyChanged("Depth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication1.ServiceReference1.DirectionEnum Direction {
            get {
                return this.DirectionField;
            }
            set {
                if ((this.DirectionField.Equals(value) != true)) {
                    this.DirectionField = value;
                    this.RaisePropertyChanged("Direction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Speed {
            get {
                return this.SpeedField;
            }
            set {
                if ((this.SpeedField.Equals(value) != true)) {
                    this.SpeedField = value;
                    this.RaisePropertyChanged("Speed");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RunPlanCategory", Namespace="http://schemas.datacontract.org/2004/07/Stimline.Data.RunDomain.Domain")]
    [System.SerializableAttribute()]
    public partial class RunPlanCategory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication1.ServiceReference1.RunCategoryType CategoryTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication1.ServiceReference1.RunCategoryType CategoryType {
            get {
                return this.CategoryTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryTypeField, value) != true)) {
                    this.CategoryTypeField = value;
                    this.RaisePropertyChanged("CategoryType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RunPlanDepthComment", Namespace="http://schemas.datacontract.org/2004/07/Stimline.Data.RunDomain.Domain")]
    [System.SerializableAttribute()]
    public partial class RunPlanDepthComment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication1.ServiceReference1.DepthCommentCategoryType CategoryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DepthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DisplayInDistanceListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OperatorCommentField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication1.ServiceReference1.DepthCommentCategoryType CategoryCode {
            get {
                return this.CategoryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryCodeField, value) != true)) {
                    this.CategoryCodeField = value;
                    this.RaisePropertyChanged("CategoryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Depth {
            get {
                return this.DepthField;
            }
            set {
                if ((this.DepthField.Equals(value) != true)) {
                    this.DepthField = value;
                    this.RaisePropertyChanged("Depth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DisplayInDistanceList {
            get {
                return this.DisplayInDistanceListField;
            }
            set {
                if ((this.DisplayInDistanceListField.Equals(value) != true)) {
                    this.DisplayInDistanceListField = value;
                    this.RaisePropertyChanged("DisplayInDistanceList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OperatorComment {
            get {
                return this.OperatorCommentField;
            }
            set {
                if ((this.OperatorCommentField.Equals(value) != true)) {
                    this.OperatorCommentField = value;
                    this.RaisePropertyChanged("OperatorComment");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RunPlanWellGuideLimit", Namespace="http://schemas.datacontract.org/2004/07/Stimline.Data.RunDomain.Domain")]
    [System.SerializableAttribute()]
    public partial class RunPlanWellGuideLimit : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication1.ServiceReference1.ActiveLimitEnum ActiveLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DepthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication1.ServiceReference1.DirectionEnum DirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RedLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication1.ServiceReference1.SensorEnum SensorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double WarningLimitField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication1.ServiceReference1.ActiveLimitEnum ActiveLimit {
            get {
                return this.ActiveLimitField;
            }
            set {
                if ((this.ActiveLimitField.Equals(value) != true)) {
                    this.ActiveLimitField = value;
                    this.RaisePropertyChanged("ActiveLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Depth {
            get {
                return this.DepthField;
            }
            set {
                if ((this.DepthField.Equals(value) != true)) {
                    this.DepthField = value;
                    this.RaisePropertyChanged("Depth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication1.ServiceReference1.DirectionEnum Direction {
            get {
                return this.DirectionField;
            }
            set {
                if ((this.DirectionField.Equals(value) != true)) {
                    this.DirectionField = value;
                    this.RaisePropertyChanged("Direction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RedLimit {
            get {
                return this.RedLimitField;
            }
            set {
                if ((this.RedLimitField.Equals(value) != true)) {
                    this.RedLimitField = value;
                    this.RaisePropertyChanged("RedLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication1.ServiceReference1.SensorEnum Sensor {
            get {
                return this.SensorField;
            }
            set {
                if ((this.SensorField.Equals(value) != true)) {
                    this.SensorField = value;
                    this.RaisePropertyChanged("Sensor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double WarningLimit {
            get {
                return this.WarningLimitField;
            }
            set {
                if ((this.WarningLimitField.Equals(value) != true)) {
                    this.WarningLimitField = value;
                    this.RaisePropertyChanged("WarningLimit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CableHeadTensionEnum", Namespace="http://schemas.datacontract.org/2004/07/Stimline.Data.RunDomain.Domain")]
    public enum CableHeadTensionEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Fixed = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Measured = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InventoryType", Namespace="http://schemas.datacontract.org/2004/07/Stimline.Data.RunDomain.Domain")]
    public enum InventoryType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        General = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cable = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Drum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OperationCabin = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XOS = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WinchSkid = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MeasuringHead = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PowerUnit = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DrumFrame = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DriveUnit = 9,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UnitOfMeasurementEnum", Namespace="http://schemas.datacontract.org/2004/07/Stimline.Data.RunDomain.Domain")]
    public enum UnitOfMeasurementEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Meter = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Feet = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MeterPerMin = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FeetPerMin = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        kg = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pound = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Bar = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Psi = 8,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DirectionEnum", Namespace="http://schemas.datacontract.org/2004/07/Stimline.Data.RunDomain.Domain")]
    public enum DirectionEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Inhole = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Outhole = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InAndOuthole = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RunCategoryType", Namespace="http://schemas.datacontract.org/2004/07/Stimline.Data.RunDomain.Domain")]
    [System.SerializableAttribute()]
    public partial class RunCategoryType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DepthCommentCategoryType", Namespace="http://schemas.datacontract.org/2004/07/Stimline.Data.RunDomain.Domain")]
    [System.SerializableAttribute()]
    public partial class DepthCommentCategoryType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ToolstringLengthReferenceEnum", Namespace="http://schemas.datacontract.org/2004/07/Stimline.Data.RunDomain.Domain")]
    public enum ToolstringLengthReferenceEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Top = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Bottom = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RunPlanToolstringElement", Namespace="http://schemas.datacontract.org/2004/07/Stimline.Data.RunDomain.Domain")]
    [System.SerializableAttribute()]
    public partial class RunPlanToolstringElement : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ToolIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Position {
            get {
                return this.PositionField;
            }
            set {
                if ((this.PositionField.Equals(value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ToolId {
            get {
                return this.ToolIdField;
            }
            set {
                if ((this.ToolIdField.Equals(value) != true)) {
                    this.ToolIdField = value;
                    this.RaisePropertyChanged("ToolId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActiveLimitEnum", Namespace="http://schemas.datacontract.org/2004/07/Stimline.Data.RunDomain.Domain")]
    public enum ActiveLimitEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Static = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Wellguide = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SensorEnum", Namespace="http://schemas.datacontract.org/2004/07/Stimline.Data.RunDomain.Domain")]
    public enum SensorEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Speed = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Tension = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Run", Namespace="http://schemas.datacontract.org/2004/07/Stimline.Data.RunDomain.Domain")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.AuditFields))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.GeneralSimulationConfiguration))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.SimulatorException))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.RunPlan[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.RunPlan))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.DepthCorrection))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.CableHeadTensionEnum))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.InventoryRequirement[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.InventoryRequirement))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.InventoryType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.UnitOfMeasurementEnum))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.RunPlanAutoSpeed[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.RunPlanAutoSpeed))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.DirectionEnum))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.RunPlanCategory[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.RunPlanCategory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.RunCategoryType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.RunPlanDepthComment[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.RunPlanDepthComment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.DepthCommentCategoryType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.RunPlanToolstring))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.ToolstringLengthReferenceEnum))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.RunPlanToolstringElement[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.RunPlanToolstringElement))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.RunPlanWellGuideLimit[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.RunPlanWellGuideLimit))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.ActiveLimitEnum))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.SensorEnum))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.Run[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.AutoSpeed[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.AutoSpeed))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.DepthComment[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.DepthComment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.RunCategory[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.RunCategory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.RunOperators[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.RunOperators))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.RunStatusEnum))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.Toolstring))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.ToolstringElement[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.ToolstringElement))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.WellGuideLimit[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.WellGuideLimit))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Exception))]
    public partial class Run : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication1.ServiceReference1.AuditFields AuditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication1.ServiceReference1.AutoSpeed[] AutoSpeedsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication1.ServiceReference1.DepthComment[] DepthCommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication1.ServiceReference1.DepthCorrection DepthCorrectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ProjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication1.ServiceReference1.RunCategory[] RunCategoriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RunNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication1.ServiceReference1.RunOperators[] RunOperatorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid RunPlanIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RunTaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object RunUnitConfigurationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication1.ServiceReference1.RunStatusEnum StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeZoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication1.ServiceReference1.Toolstring ToolstringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UtcOffsetMinutesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication1.ServiceReference1.WellGuideLimit[] WellGuideLimitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid WellboreIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication1.ServiceReference1.AuditFields Audit {
            get {
                return this.AuditField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditField, value) != true)) {
                    this.AuditField = value;
                    this.RaisePropertyChanged("Audit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication1.ServiceReference1.AutoSpeed[] AutoSpeeds {
            get {
                return this.AutoSpeedsField;
            }
            set {
                if ((object.ReferenceEquals(this.AutoSpeedsField, value) != true)) {
                    this.AutoSpeedsField = value;
                    this.RaisePropertyChanged("AutoSpeeds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication1.ServiceReference1.DepthComment[] DepthComments {
            get {
                return this.DepthCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.DepthCommentsField, value) != true)) {
                    this.DepthCommentsField = value;
                    this.RaisePropertyChanged("DepthComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication1.ServiceReference1.DepthCorrection DepthCorrection {
            get {
                return this.DepthCorrectionField;
            }
            set {
                if ((object.ReferenceEquals(this.DepthCorrectionField, value) != true)) {
                    this.DepthCorrectionField = value;
                    this.RaisePropertyChanged("DepthCorrection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ProjectId {
            get {
                return this.ProjectIdField;
            }
            set {
                if ((this.ProjectIdField.Equals(value) != true)) {
                    this.ProjectIdField = value;
                    this.RaisePropertyChanged("ProjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication1.ServiceReference1.RunCategory[] RunCategories {
            get {
                return this.RunCategoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.RunCategoriesField, value) != true)) {
                    this.RunCategoriesField = value;
                    this.RaisePropertyChanged("RunCategories");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RunNumber {
            get {
                return this.RunNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.RunNumberField, value) != true)) {
                    this.RunNumberField = value;
                    this.RaisePropertyChanged("RunNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication1.ServiceReference1.RunOperators[] RunOperators {
            get {
                return this.RunOperatorsField;
            }
            set {
                if ((object.ReferenceEquals(this.RunOperatorsField, value) != true)) {
                    this.RunOperatorsField = value;
                    this.RaisePropertyChanged("RunOperators");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid RunPlanId {
            get {
                return this.RunPlanIdField;
            }
            set {
                if ((this.RunPlanIdField.Equals(value) != true)) {
                    this.RunPlanIdField = value;
                    this.RaisePropertyChanged("RunPlanId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RunTask {
            get {
                return this.RunTaskField;
            }
            set {
                if ((object.ReferenceEquals(this.RunTaskField, value) != true)) {
                    this.RunTaskField = value;
                    this.RaisePropertyChanged("RunTask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object RunUnitConfigurations {
            get {
                return this.RunUnitConfigurationsField;
            }
            set {
                if ((object.ReferenceEquals(this.RunUnitConfigurationsField, value) != true)) {
                    this.RunUnitConfigurationsField = value;
                    this.RaisePropertyChanged("RunUnitConfigurations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication1.ServiceReference1.RunStatusEnum Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeZone {
            get {
                return this.TimeZoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeZoneField, value) != true)) {
                    this.TimeZoneField = value;
                    this.RaisePropertyChanged("TimeZone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication1.ServiceReference1.Toolstring Toolstring {
            get {
                return this.ToolstringField;
            }
            set {
                if ((object.ReferenceEquals(this.ToolstringField, value) != true)) {
                    this.ToolstringField = value;
                    this.RaisePropertyChanged("Toolstring");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UnitId {
            get {
                return this.UnitIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitIdField, value) != true)) {
                    this.UnitIdField = value;
                    this.RaisePropertyChanged("UnitId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UtcOffsetMinutes {
            get {
                return this.UtcOffsetMinutesField;
            }
            set {
                if ((this.UtcOffsetMinutesField.Equals(value) != true)) {
                    this.UtcOffsetMinutesField = value;
                    this.RaisePropertyChanged("UtcOffsetMinutes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication1.ServiceReference1.WellGuideLimit[] WellGuideLimits {
            get {
                return this.WellGuideLimitsField;
            }
            set {
                if ((object.ReferenceEquals(this.WellGuideLimitsField, value) != true)) {
                    this.WellGuideLimitsField = value;
                    this.RaisePropertyChanged("WellGuideLimits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid WellboreId {
            get {
                return this.WellboreIdField;
            }
            set {
                if ((this.WellboreIdField.Equals(value) != true)) {
                    this.WellboreIdField = value;
                    this.RaisePropertyChanged("WellboreId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Toolstring", Namespace="http://schemas.datacontract.org/2004/07/Stimline.Data.RunDomain.Domain")]
    [System.SerializableAttribute()]
    public partial class Toolstring : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> DistanceToCclField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication1.ServiceReference1.ToolstringLengthReferenceEnum LengthReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> ToolstringDisplacementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication1.ServiceReference1.ToolstringElement[] ToolstringElementsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> ToolstringLengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> ToolstringWeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseSimpleToolstringField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> DistanceToCcl {
            get {
                return this.DistanceToCclField;
            }
            set {
                if ((this.DistanceToCclField.Equals(value) != true)) {
                    this.DistanceToCclField = value;
                    this.RaisePropertyChanged("DistanceToCcl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication1.ServiceReference1.ToolstringLengthReferenceEnum LengthReference {
            get {
                return this.LengthReferenceField;
            }
            set {
                if ((this.LengthReferenceField.Equals(value) != true)) {
                    this.LengthReferenceField = value;
                    this.RaisePropertyChanged("LengthReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> ToolstringDisplacement {
            get {
                return this.ToolstringDisplacementField;
            }
            set {
                if ((this.ToolstringDisplacementField.Equals(value) != true)) {
                    this.ToolstringDisplacementField = value;
                    this.RaisePropertyChanged("ToolstringDisplacement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication1.ServiceReference1.ToolstringElement[] ToolstringElements {
            get {
                return this.ToolstringElementsField;
            }
            set {
                if ((object.ReferenceEquals(this.ToolstringElementsField, value) != true)) {
                    this.ToolstringElementsField = value;
                    this.RaisePropertyChanged("ToolstringElements");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> ToolstringLength {
            get {
                return this.ToolstringLengthField;
            }
            set {
                if ((this.ToolstringLengthField.Equals(value) != true)) {
                    this.ToolstringLengthField = value;
                    this.RaisePropertyChanged("ToolstringLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> ToolstringWeight {
            get {
                return this.ToolstringWeightField;
            }
            set {
                if ((this.ToolstringWeightField.Equals(value) != true)) {
                    this.ToolstringWeightField = value;
                    this.RaisePropertyChanged("ToolstringWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseSimpleToolstring {
            get {
                return this.UseSimpleToolstringField;
            }
            set {
                if ((this.UseSimpleToolstringField.Equals(value) != true)) {
                    this.UseSimpleToolstringField = value;
                    this.RaisePropertyChanged("UseSimpleToolstring");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AutoSpeed", Namespace="http://schemas.datacontract.org/2004/07/Stimline.Data.RunDomain.Domain")]
    [System.SerializableAttribute()]
    public partial class AutoSpeed : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ControlFunctionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DepthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication1.ServiceReference1.DirectionEnum DirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SpeedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ControlFunctionCode {
            get {
                return this.ControlFunctionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ControlFunctionCodeField, value) != true)) {
                    this.ControlFunctionCodeField = value;
                    this.RaisePropertyChanged("ControlFunctionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Depth {
            get {
                return this.DepthField;
            }
            set {
                if ((this.DepthField.Equals(value) != true)) {
                    this.DepthField = value;
                    this.RaisePropertyChanged("Depth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication1.ServiceReference1.DirectionEnum Direction {
            get {
                return this.DirectionField;
            }
            set {
                if ((this.DirectionField.Equals(value) != true)) {
                    this.DirectionField = value;
                    this.RaisePropertyChanged("Direction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Speed {
            get {
                return this.SpeedField;
            }
            set {
                if ((this.SpeedField.Equals(value) != true)) {
                    this.SpeedField = value;
                    this.RaisePropertyChanged("Speed");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DepthComment", Namespace="http://schemas.datacontract.org/2004/07/Stimline.Data.RunDomain.Domain")]
    [System.SerializableAttribute()]
    public partial class DepthComment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication1.ServiceReference1.DepthCommentCategoryType CategoryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DepthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DisplayInDistanceListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OperatorCommentField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication1.ServiceReference1.DepthCommentCategoryType CategoryCode {
            get {
                return this.CategoryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryCodeField, value) != true)) {
                    this.CategoryCodeField = value;
                    this.RaisePropertyChanged("CategoryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Depth {
            get {
                return this.DepthField;
            }
            set {
                if ((this.DepthField.Equals(value) != true)) {
                    this.DepthField = value;
                    this.RaisePropertyChanged("Depth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DisplayInDistanceList {
            get {
                return this.DisplayInDistanceListField;
            }
            set {
                if ((this.DisplayInDistanceListField.Equals(value) != true)) {
                    this.DisplayInDistanceListField = value;
                    this.RaisePropertyChanged("DisplayInDistanceList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OperatorComment {
            get {
                return this.OperatorCommentField;
            }
            set {
                if ((this.OperatorCommentField.Equals(value) != true)) {
                    this.OperatorCommentField = value;
                    this.RaisePropertyChanged("OperatorComment");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RunCategory", Namespace="http://schemas.datacontract.org/2004/07/Stimline.Data.RunDomain.Domain")]
    [System.SerializableAttribute()]
    public partial class RunCategory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication1.ServiceReference1.RunCategoryType CategoryTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication1.ServiceReference1.RunCategoryType CategoryType {
            get {
                return this.CategoryTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryTypeField, value) != true)) {
                    this.CategoryTypeField = value;
                    this.RaisePropertyChanged("CategoryType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RunOperators", Namespace="http://schemas.datacontract.org/2004/07/Stimline.Data.RunDomain.Domain")]
    [System.SerializableAttribute()]
    public partial class RunOperators : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RunStatusEnum", Namespace="http://schemas.datacontract.org/2004/07/Stimline.Data.RunDomain.Domain")]
    public enum RunStatusEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Active = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Missrun = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ToolstringElement", Namespace="http://schemas.datacontract.org/2004/07/Stimline.Data.RunDomain.Domain")]
    [System.SerializableAttribute()]
    public partial class ToolstringElement : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ToolIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Position {
            get {
                return this.PositionField;
            }
            set {
                if ((this.PositionField.Equals(value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ToolId {
            get {
                return this.ToolIdField;
            }
            set {
                if ((this.ToolIdField.Equals(value) != true)) {
                    this.ToolIdField = value;
                    this.RaisePropertyChanged("ToolId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WellGuideLimit", Namespace="http://schemas.datacontract.org/2004/07/Stimline.Data.RunDomain.Domain")]
    [System.SerializableAttribute()]
    public partial class WellGuideLimit : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication1.ServiceReference1.ActiveLimitEnum ActiveLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DepthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication1.ServiceReference1.DirectionEnum DirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RedLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication1.ServiceReference1.SensorEnum SensorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double WarningLimitField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication1.ServiceReference1.ActiveLimitEnum ActiveLimit {
            get {
                return this.ActiveLimitField;
            }
            set {
                if ((this.ActiveLimitField.Equals(value) != true)) {
                    this.ActiveLimitField = value;
                    this.RaisePropertyChanged("ActiveLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Depth {
            get {
                return this.DepthField;
            }
            set {
                if ((this.DepthField.Equals(value) != true)) {
                    this.DepthField = value;
                    this.RaisePropertyChanged("Depth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication1.ServiceReference1.DirectionEnum Direction {
            get {
                return this.DirectionField;
            }
            set {
                if ((this.DirectionField.Equals(value) != true)) {
                    this.DirectionField = value;
                    this.RaisePropertyChanged("Direction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RedLimit {
            get {
                return this.RedLimitField;
            }
            set {
                if ((this.RedLimitField.Equals(value) != true)) {
                    this.RedLimitField = value;
                    this.RaisePropertyChanged("RedLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication1.ServiceReference1.SensorEnum Sensor {
            get {
                return this.SensorField;
            }
            set {
                if ((this.SensorField.Equals(value) != true)) {
                    this.SensorField = value;
                    this.RaisePropertyChanged("Sensor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double WarningLimit {
            get {
                return this.WarningLimitField;
            }
            set {
                if ((this.WarningLimitField.Equals(value) != true)) {
                    this.WarningLimitField = value;
                    this.RaisePropertyChanged("WarningLimit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ISimulatorWCFService")]
    public interface ISimulatorWCFService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimulatorWCFService/UpdateSimulationConfiguration", ReplyAction="http://tempuri.org/ISimulatorWCFService/UpdateSimulationConfigurationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConsoleApplication1.ServiceReference1.SimulatorException), Action="http://tempuri.org/ISimulatorWCFService/UpdateSimulationConfigurationSimulatorExc" +
            "eptionFault", Name="SimulatorException", Namespace="http://schemas.datacontract.org/2004/07/ServiceCommon")]
        bool UpdateSimulationConfiguration(ConsoleApplication1.ServiceReference1.GeneralSimulationConfiguration config);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimulatorWCFService/UpdateSimulationConfiguration", ReplyAction="http://tempuri.org/ISimulatorWCFService/UpdateSimulationConfigurationResponse")]
        System.Threading.Tasks.Task<bool> UpdateSimulationConfigurationAsync(ConsoleApplication1.ServiceReference1.GeneralSimulationConfiguration config);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimulatorWCFService/GetAllRunPlans", ReplyAction="http://tempuri.org/ISimulatorWCFService/GetAllRunPlansResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConsoleApplication1.ServiceReference1.SimulatorException), Action="http://tempuri.org/ISimulatorWCFService/GetAllRunPlansSimulatorExceptionFault", Name="SimulatorException", Namespace="http://schemas.datacontract.org/2004/07/ServiceCommon")]
        ConsoleApplication1.ServiceReference1.RunPlan[] GetAllRunPlans();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimulatorWCFService/GetAllRunPlans", ReplyAction="http://tempuri.org/ISimulatorWCFService/GetAllRunPlansResponse")]
        System.Threading.Tasks.Task<ConsoleApplication1.ServiceReference1.RunPlan[]> GetAllRunPlansAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimulatorWCFService/AddRunPlan", ReplyAction="http://tempuri.org/ISimulatorWCFService/AddRunPlanResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConsoleApplication1.ServiceReference1.SimulatorException), Action="http://tempuri.org/ISimulatorWCFService/AddRunPlanSimulatorExceptionFault", Name="SimulatorException", Namespace="http://schemas.datacontract.org/2004/07/ServiceCommon")]
        bool AddRunPlan(ConsoleApplication1.ServiceReference1.RunPlan runPlan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimulatorWCFService/AddRunPlan", ReplyAction="http://tempuri.org/ISimulatorWCFService/AddRunPlanResponse")]
        System.Threading.Tasks.Task<bool> AddRunPlanAsync(ConsoleApplication1.ServiceReference1.RunPlan runPlan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimulatorWCFService/EditRunPlan", ReplyAction="http://tempuri.org/ISimulatorWCFService/EditRunPlanResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConsoleApplication1.ServiceReference1.SimulatorException), Action="http://tempuri.org/ISimulatorWCFService/EditRunPlanSimulatorExceptionFault", Name="SimulatorException", Namespace="http://schemas.datacontract.org/2004/07/ServiceCommon")]
        bool EditRunPlan(ConsoleApplication1.ServiceReference1.RunPlan runPlan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimulatorWCFService/EditRunPlan", ReplyAction="http://tempuri.org/ISimulatorWCFService/EditRunPlanResponse")]
        System.Threading.Tasks.Task<bool> EditRunPlanAsync(ConsoleApplication1.ServiceReference1.RunPlan runPlan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimulatorWCFService/DeleteRunPlan", ReplyAction="http://tempuri.org/ISimulatorWCFService/DeleteRunPlanResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConsoleApplication1.ServiceReference1.SimulatorException), Action="http://tempuri.org/ISimulatorWCFService/DeleteRunPlanSimulatorExceptionFault", Name="SimulatorException", Namespace="http://schemas.datacontract.org/2004/07/ServiceCommon")]
        bool DeleteRunPlan(System.Guid runPlanId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimulatorWCFService/DeleteRunPlan", ReplyAction="http://tempuri.org/ISimulatorWCFService/DeleteRunPlanResponse")]
        System.Threading.Tasks.Task<bool> DeleteRunPlanAsync(System.Guid runPlanId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimulatorWCFService/GetAllRuns", ReplyAction="http://tempuri.org/ISimulatorWCFService/GetAllRunsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConsoleApplication1.ServiceReference1.SimulatorException), Action="http://tempuri.org/ISimulatorWCFService/GetAllRunsSimulatorExceptionFault", Name="SimulatorException", Namespace="http://schemas.datacontract.org/2004/07/ServiceCommon")]
        ConsoleApplication1.ServiceReference1.Run[] GetAllRuns();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimulatorWCFService/GetAllRuns", ReplyAction="http://tempuri.org/ISimulatorWCFService/GetAllRunsResponse")]
        System.Threading.Tasks.Task<ConsoleApplication1.ServiceReference1.Run[]> GetAllRunsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimulatorWCFService/GetAllRunsWithSpecifiedRunPlanId", ReplyAction="http://tempuri.org/ISimulatorWCFService/GetAllRunsWithSpecifiedRunPlanIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConsoleApplication1.ServiceReference1.SimulatorException), Action="http://tempuri.org/ISimulatorWCFService/GetAllRunsWithSpecifiedRunPlanIdSimulator" +
            "ExceptionFault", Name="SimulatorException", Namespace="http://schemas.datacontract.org/2004/07/ServiceCommon")]
        ConsoleApplication1.ServiceReference1.Run[] GetAllRunsWithSpecifiedRunPlanId(System.Guid runPlanId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimulatorWCFService/GetAllRunsWithSpecifiedRunPlanId", ReplyAction="http://tempuri.org/ISimulatorWCFService/GetAllRunsWithSpecifiedRunPlanIdResponse")]
        System.Threading.Tasks.Task<ConsoleApplication1.ServiceReference1.Run[]> GetAllRunsWithSpecifiedRunPlanIdAsync(System.Guid runPlanId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimulatorWCFService/GetAllRunsFilteredByStatus", ReplyAction="http://tempuri.org/ISimulatorWCFService/GetAllRunsFilteredByStatusResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConsoleApplication1.ServiceReference1.SimulatorException), Action="http://tempuri.org/ISimulatorWCFService/GetAllRunsFilteredByStatusSimulatorExcept" +
            "ionFault", Name="SimulatorException", Namespace="http://schemas.datacontract.org/2004/07/ServiceCommon")]
        ConsoleApplication1.ServiceReference1.Run[] GetAllRunsFilteredByStatus(ConsoleApplication1.ServiceReference1.RunStatusEnum runStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimulatorWCFService/GetAllRunsFilteredByStatus", ReplyAction="http://tempuri.org/ISimulatorWCFService/GetAllRunsFilteredByStatusResponse")]
        System.Threading.Tasks.Task<ConsoleApplication1.ServiceReference1.Run[]> GetAllRunsFilteredByStatusAsync(ConsoleApplication1.ServiceReference1.RunStatusEnum runStatus);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISimulatorWCFServiceChannel : ConsoleApplication1.ServiceReference1.ISimulatorWCFService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SimulatorWCFServiceClient : System.ServiceModel.ClientBase<ConsoleApplication1.ServiceReference1.ISimulatorWCFService>, ConsoleApplication1.ServiceReference1.ISimulatorWCFService {
        
        public SimulatorWCFServiceClient() {
        }
        
        public SimulatorWCFServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SimulatorWCFServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SimulatorWCFServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SimulatorWCFServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool UpdateSimulationConfiguration(ConsoleApplication1.ServiceReference1.GeneralSimulationConfiguration config) {
            return base.Channel.UpdateSimulationConfiguration(config);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateSimulationConfigurationAsync(ConsoleApplication1.ServiceReference1.GeneralSimulationConfiguration config) {
            return base.Channel.UpdateSimulationConfigurationAsync(config);
        }
        
        public ConsoleApplication1.ServiceReference1.RunPlan[] GetAllRunPlans() {
            return base.Channel.GetAllRunPlans();
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication1.ServiceReference1.RunPlan[]> GetAllRunPlansAsync() {
            return base.Channel.GetAllRunPlansAsync();
        }
        
        public bool AddRunPlan(ConsoleApplication1.ServiceReference1.RunPlan runPlan) {
            return base.Channel.AddRunPlan(runPlan);
        }
        
        public System.Threading.Tasks.Task<bool> AddRunPlanAsync(ConsoleApplication1.ServiceReference1.RunPlan runPlan) {
            return base.Channel.AddRunPlanAsync(runPlan);
        }
        
        public bool EditRunPlan(ConsoleApplication1.ServiceReference1.RunPlan runPlan) {
            return base.Channel.EditRunPlan(runPlan);
        }
        
        public System.Threading.Tasks.Task<bool> EditRunPlanAsync(ConsoleApplication1.ServiceReference1.RunPlan runPlan) {
            return base.Channel.EditRunPlanAsync(runPlan);
        }
        
        public bool DeleteRunPlan(System.Guid runPlanId) {
            return base.Channel.DeleteRunPlan(runPlanId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteRunPlanAsync(System.Guid runPlanId) {
            return base.Channel.DeleteRunPlanAsync(runPlanId);
        }
        
        public ConsoleApplication1.ServiceReference1.Run[] GetAllRuns() {
            return base.Channel.GetAllRuns();
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication1.ServiceReference1.Run[]> GetAllRunsAsync() {
            return base.Channel.GetAllRunsAsync();
        }
        
        public ConsoleApplication1.ServiceReference1.Run[] GetAllRunsWithSpecifiedRunPlanId(System.Guid runPlanId) {
            return base.Channel.GetAllRunsWithSpecifiedRunPlanId(runPlanId);
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication1.ServiceReference1.Run[]> GetAllRunsWithSpecifiedRunPlanIdAsync(System.Guid runPlanId) {
            return base.Channel.GetAllRunsWithSpecifiedRunPlanIdAsync(runPlanId);
        }
        
        public ConsoleApplication1.ServiceReference1.Run[] GetAllRunsFilteredByStatus(ConsoleApplication1.ServiceReference1.RunStatusEnum runStatus) {
            return base.Channel.GetAllRunsFilteredByStatus(runStatus);
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication1.ServiceReference1.Run[]> GetAllRunsFilteredByStatusAsync(ConsoleApplication1.ServiceReference1.RunStatusEnum runStatus) {
            return base.Channel.GetAllRunsFilteredByStatusAsync(runStatus);
        }
    }
}
